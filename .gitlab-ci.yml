include:
  - project: 'Bigouden/gitlab-ci-templates'
    file: '.gitlab-ci-docker.yml'

.standalone:
  image:
    name: $CONTAINER_TEST_IMAGE
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  dependencies: []  
    
stages:
  - Quality
  - Build
  - Commands
  - Collections
  - Python Modules
  - Inspect
  - Release
  - Clean

Ansible:
  stage: Commands
  extends: .standalone
  script:
    - ansible --version

Ansible Galaxy: 
  stage: Commands
  extends: .standalone
  script:
    - ansible-galaxy --version

Ansible Lint: 
  stage: Commands
  extends: .standalone
  script:
    - ansible-lint --version

Ansible Playbook: 
  stage: Commands
  extends: .standalone
  script:
    - ansible-playbook --version

Ansible Vault: 
  stage: Commands
  extends: .standalone
  script:
    - ansible-vault --version

Git CLI:
  stage: Commands
  extends: .standalone
  script:
    - git version

Netcommon: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep ansible.netcommon

Posix: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep ansible.posix

Crypto: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.crypto

General: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.general

Kubernetes: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.kubernetes

Cloud: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep google.cloud

Docker: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.docker

Postgresql: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.postgresql

Mongodb: 
  stage: Collections
  extends: .standalone
  script:
    - ansible-galaxy collection list | grep community.mongodb

Bcrypt:
  stage: Python Modules
  extends: .standalone
  script:
    - python3 -c "import sys, pkgutil; sys.exit(0 if pkgutil.find_loader('bcrypt') else 1)"

Git:
  stage: Python Modules
  extends: .standalone
  script:
    - python3 -c "import sys, pkgutil; sys.exit(0 if pkgutil.find_loader('git') else 1)"

Git:
  stage: Python Modules
  extends: .standalone
  script:
    - python3 -c "import sys, pkgutil; sys.exit(0 if pkgutil.find_loader('gitlab') else 1)"

Passlib:
  stage: Python Modules
  extends: .standalone
  script:
    - python3 -c "import sys, pkgutil; sys.exit(0 if pkgutil.find_loader('passlib') else 1)"
