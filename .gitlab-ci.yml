image: docker:latest
services:
  - docker:dind

stages:
  - Quality
  - Build
  - Test
  - Release
  
variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:test
  CONTAINER_CURRENT_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_VERSION_IMAGE: $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_HUB_VERSION_IMAGE: dnum/ansible:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
  DOCKER_HUB_LATEST_IMAGE: dnum/ansible:latest

Hadolint:
  stage: Quality
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint --ignore DL3013 --ignore DL3018 Dockerfile
  except:
    - master
    - merge_requests

Build:
  stage: Build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --build-arg ANSIBLE_VERSION=$CI_COMMIT_REF_NAME -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  except:
    - master
    - merge_requests

Test Ansible:
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE
  variables:
    GIT_STRATEGY: none
  except:
    - master
    - merge_requests

Test Ansible Lint: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-lint --version
  variables:
    GIT_STRATEGY: none
  except:
    - master
    - merge_requests

Test Ansible Playbook: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-playbook --version
  variables:
    GIT_STRATEGY: none
  except:
    - master
    - merge_requests

Test Ansible Vault: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-vault --version
  variables:
    GIT_STRATEGY: none
  except:
    - master
    - merge_requests
    
Release Current:
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_CURRENT_IMAGE
    - docker push $CONTAINER_CURRENT_IMAGE
  except:
    - master
    - merge_requests

Release:
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
  script:
    - docker pull $CONTAINER_VERSION_IMAGE
    - docker tag $CONTAINER_VERSION_IMAGE $DOCKER_HUB_VERSION_IMAGE
    - docker tag $CONTAINER_VERSION_IMAGE $CONTAINER_LATEST_IMAGE
    - docker tag $CONTAINER_VERSION_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - docker push $DOCKER_HUB_VERSION_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
  only:
    - merge_requests