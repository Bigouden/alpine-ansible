include:
  - project: 'Bigouden/gitlab-ci-templates'
    file: '.gitlab-ci-docker.yml'
    
stages:
  - Quality
  - Build
  - Test
  - Inspect
  - Release

Test Ansible:
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE
  variables:
    GIT_STRATEGY: none

Test Ansible Lint: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-lint --version
  variables:
    GIT_STRATEGY: none

Test Ansible Playbook: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-playbook --version
  variables:
    GIT_STRATEGY: none

Test Ansible Vault: 
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run  $CONTAINER_TEST_IMAGE ansible-vault --version
  variables:
    GIT_STRATEGY: none

DockerHub (PRO):
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKER_HUB_ENTERPRISE_USER -p $DOCKER_HUB_ENTERPRISE_PASSWORD
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - docker push $DOCKER_HUB_VERSION_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  variables:
    DOCKER_HUB_VERSION_IMAGE: $DOCKER_HUB_ENTERPRISE_USER/ansible:$CI_COMMIT_REF_NAME
    DOCKER_HUB_LATEST_IMAGE: $DOCKER_HUB_ENTERPRISE_USER/ansible:latest
    GIT_STRATEGY: none
  rules:
    - if: $DOCKER_HUB_ENTERPRISE_USER && $DOCKER_HUB_ENTERPRISE_PASSWORD
      when: manual